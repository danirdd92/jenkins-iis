---
- name: Ensure backup directory exists
  ansible.windows.win_file:
    path: "{{ backup_dir }}"
    state: directory

- name: Backup existing website directories
  community.windows.win_zip:
    src: "{{ item.physical_path }}"
    dest: "{{ backup_dir }}\\{{ item.name }}_{{ lookup('ansible.date_time')['date'] }}.zip"
    compression: maximum
  loop: "{{ websites }}"
  when: win_stat(path=item.physical_path).stat.exists

- name: Stop IIS websites if they exist
  community.windows.win_iis_website:
    name: "{{ item.name }}"
    state: stopped
  loop: "{{ websites }}"
  ignore_errors: yes

- name: Remove IIS websites
  community.windows.win_iis_website:
    name: "{{ item.name }}"
    state: absent
  loop: "{{ websites }}"
  ignore_errors: yes

- name: Remove existing website directories
  win_file:
    path: "{{ item.physical_path }}"
    state: absent
  loop: "{{ websites }}"
  ignore_errors: yes

- name: Recreate website directories
  win_file:
    path: "{{ item.physical_path }}"
    state: directory
  loop: "{{ websites }}"

- name: Copy new website content to remote server
  windows.win_copy:
    src: "{{ item.local_source }}/"
    dest: "{{ item.physical_path }}"
    recurse: yes
  loop: "{{ websites }}"

- name: Ensure application pool exists
  community.windows.win_iis_webapppool:
    name: "{{ application_pool }}"
    state: started

- name: Create and start IIS websites
  community.windows.win_iis_website:
    name: "{{ item.name }}"
    state: started
    physical_path: "{{ item.physical_path }}"
    port: "{{ item.port }}"
    application_pool: "{{ application_pool }}"
  loop: "{{ websites }}"
